'use client'
import { Lilita_One, Passion_One } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faArrowRight,
  faChartColumn,
  faCircleArrowRight,
  faHouse,
  faMoneyBillAlt,
  faMoneyBillTransfer,
} from "@fortawesome/free-solid-svg-icons";
import { AuthProvider } from "@/contexts/AuthContext";
import { motion } from "framer-motion";
import { useState } from "react";

const lilitaOne = Lilita_One({
  subsets: ["latin"],
  variable: "--font-lilita-one",
  weight: "400",
});
const passionOne = Passion_One({
  subsets: ["latin"],
  variable: "--font-passion-one",
  weight: "400",
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [isNavOpen, setIsNavOpen] = useState(true);

  const handleClickNav = () => {
    setIsNavOpen(!isNavOpen);
  }

  return (
    <html lang="en">
      <body className={`${lilitaOne.variable} ${passionOne.variable}`}>
        <AuthProvider>
          <div className={`fixed top-1/2 -translate-y-1/2 ${isNavOpen ? "z-50" : "z-0"}`}>
            <motion.div
              animate={{ x: isNavOpen ? 1 : -70, opacity: isNavOpen ? 1 : 0.1 }}
              transition={{ type: "spring", bounce: 0.6 }}
              className={`bg-secondary rounded-r-2xl flex flex-col p-4 gap-8 py-5 `}
            >
              <IconNavbar delay={0.1} route={"/"} icon={faHouse} />
              <IconNavbar delay={0.2} route={"/dashboard"} icon={faMoneyBillAlt} />
              <IconNavbar delay={0.3} route={"/transaction"} icon={faMoneyBillTransfer} />
              <IconNavbar delay={0.4} route={"/report"} icon={faChartColumn} />
            </motion.div>
            
            <motion.button
              className="p-3 z-50" onClick={handleClickNav}
              transition={{ repeat: Infinity, ease: 'easeInOut', duration: 1.2 }}
            >
              <FontAwesomeIcon
              flip={isNavOpen && "horizontal" }
                icon={faCircleArrowRight}
                color="#059669"
                size="2x"
                className="w-8"
              />

            </motion.button>
          </div>
          {children}
        </AuthProvider>
      </body>
    </html>
  );
}


const IconNavbar = ({route, icon, delay}) => {
  return (
    <Link href={route} >
      <motion.div
      initial={{ scale: 0.3, opacity: 0.3 }}
      whileInView={{ scale: 1, opacity: 1 }}
      transition={{ delay: delay }}
      >
        <FontAwesomeIcon icon={icon} color="#BBF7D0" size="2x" className="w-8 hover:scale-105" />
      </motion.div>
    </Link>
  );
}